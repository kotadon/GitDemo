<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-07T12:00:49 IST" name="Loan Depeartment" finished-at="2022-11-07T12:00:49 IST" duration-ms="82">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@51dcb805]" name="ploan" class="test.day2"/>
        <method signature="day4.MobileloginHomeLoan()[pri:0, instance:test.day4@66498326]" name="MobileloginHomeLoan" class="test.day4"/>
        <method signature="day3.MobileLoginCarLoan()[pri:0, instance:test.day3@6da21078]" name="MobileLoginCarLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-11-07T12:00:49 IST" name="Car Loan" finished-at="2022-11-07T12:00:49 IST" duration-ms="82">
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="Bfsuite" finished-at="2022-11-07T12:00:49 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="BeforeClass" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method is-config="true" signature="BeforeEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="BeforeEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEveryMethod -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="MobileLoginCarLoan" finished-at="2022-11-07T12:00:49 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="AfterEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="AfterEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethod -->
        <test-method signature="MobileSignoutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="MobileSignoutCarLoan" data-provider="getData" finished-at="2022-11-07T12:00:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarLoan -->
        <test-method is-config="true" signature="BeforeEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="BeforeEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEveryMethod -->
        <test-method is-config="true" signature="AfterEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="AfterEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethod -->
        <test-method is-config="true" signature="BeforeEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="BeforeEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEveryMethod -->
        <test-method signature="MobileSignoutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="MobileSignoutCarLoan" data-provider="getData" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarLoan -->
        <test-method is-config="true" signature="AfterEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="AfterEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethod -->
        <test-method is-config="true" signature="BeforeEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="BeforeEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEveryMethod -->
        <test-method signature="MobileSignoutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="MobileSignoutCarLoan" data-provider="getData" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarLoan -->
        <test-method is-config="true" signature="AfterEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="AfterEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethod -->
        <test-method is-config="true" signature="BeforeEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="BeforeEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEveryMethod -->
        <test-method signature="WebloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="WebloginCarLoan" finished-at="2022-11-07T12:00:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="AfterEveryMethod()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="AfterEveryMethod" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEveryMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:test.day3@6da21078]" started-at="2022-11-07T12:00:49 IST" name="AfterClass" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="AfSuite()[pri:0, instance:test.day1@44821a96]" started-at="2022-11-07T12:00:49 IST" name="AfSuite" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
    <test started-at="2022-11-07T12:00:49 IST" name="Personal Loan" finished-at="2022-11-07T12:00:49 IST" duration-ms="69">
      <class name="test.day4">
        <test-method signature="LoginApiHomeLoan()[pri:0, instance:test.day4@66498326]" started-at="2022-11-07T12:00:49 IST" name="LoginApiHomeLoan" finished-at="2022-11-07T12:00:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginApiHomeLoan -->
        <test-method signature="MobileloginHomeLoan()[pri:0, instance:test.day4@66498326]" started-at="2022-11-07T12:00:49 IST" name="MobileloginHomeLoan" finished-at="2022-11-07T12:00:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test.day4@66498326]" started-at="2022-11-07T12:00:49 IST" name="WebloginHomeLoan" finished-at="2022-11-07T12:00:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequest()[pri:0, instance:test.day2@51dcb805]" started-at="2022-11-07T12:00:49 IST" name="prerequest" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequest -->
        <test-method signature="ploan()[pri:0, instance:test.day2@51dcb805]" started-at="2022-11-07T12:00:49 IST" name="ploan" finished-at="2022-11-07T12:00:49 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method is-config="true" signature="postrequest()[pri:0, instance:test.day2@51dcb805]" started-at="2022-11-07T12:00:49 IST" name="postrequest" finished-at="2022-11-07T12:00:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postrequest -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@44821a96]" started-at="2022-11-07T12:00:49 IST" name="Demo" finished-at="2022-11-07T12:00:49 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.day1.Demo(day1.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Depeartment -->
</testng-results>
